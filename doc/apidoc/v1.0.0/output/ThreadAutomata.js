Ext.data.JsonP.ThreadAutomata({"subclasses":[],"statics":{"css_mixin":[],"cfg":[],"method":[],"property":[],"event":[],"css_var":[]},"extends":null,"uses":[],"html_meta":{},"linenr":196,"meta":{},"members":{"css_mixin":[],"cfg":[],"method":[{"meta":{},"owner":"ThreadAutomata","name":"constructor","id":"method-constructor","tagname":"method"},{"meta":{},"owner":"ThreadAutomata","name":"run","id":"method-run","tagname":"method"}],"property":[],"event":[],"css_var":[]},"requires":[],"superclasses":[],"inheritdoc":null,"component":false,"inheritable":null,"mixedInto":[],"singleton":false,"enum":null,"override":null,"private":null,"name":"ThreadAutomata","mixins":[],"parentMixins":[],"id":"class-ThreadAutomata","tagname":"class","html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/ll_Processor.html#ThreadAutomata' target='_blank'>ll_Processor.js</a></div></pre><div class='doc-contents'><p>@classDescription Creates an automata for atomic processing.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ThreadAutomata'>ThreadAutomata</span><br/><a href='source/ll_Processor.html#ThreadAutomata-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/ThreadAutomata-method-constructor' class='name expandable'>ThreadAutomata</a>( <span class='pre'></span> ) : <a href=\"#!/api/ThreadAutomata\" rel=\"ThreadAutomata\" class=\"docClass\">ThreadAutomata</a></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/ThreadAutomata\" rel=\"ThreadAutomata\" class=\"docClass\">ThreadAutomata</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-run' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ThreadAutomata'>ThreadAutomata</span><br/><a href='source/ll_Processor.html#ThreadAutomata-method-run' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ThreadAutomata-method-run' class='name expandable'>run</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Calls a function that manages the next activity in function\nfor the state of the object. ...</div><div class='long'><p>Calls a function that manages the next activity in function\nfor the state of the object. It is responsible of state transitions through <a href=\"#!/api/Automata-method-run\" rel=\"Automata-method-run\" class=\"docClass\">Automata.run</a>.\nThe main difference between <a href=\"#!/api/ThreadAutomata-method-run\" rel=\"ThreadAutomata-method-run\" class=\"docClass\">ThreadAutomata.run</a> and <a href=\"#!/api/Automata-method-run\" rel=\"Automata-method-run\" class=\"docClass\">Automata.run</a> lies on\nthe type of the solicitor functions, designed to make atomic operations.</p>\n\n<p>@memberOf {ThreadAutomata}</p>\n</div></div></div></div></div></div></div>","files":[{"href":"ll_Processor.html#ThreadAutomata","filename":"ll_Processor.js"}],"alternateClassNames":[],"aliases":{}});