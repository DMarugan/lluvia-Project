Ext.data.JsonP.global({"subclasses":[],"statics":{"css_mixin":[],"cfg":[],"method":[],"property":[],"event":[],"css_var":[]},"uses":[],"html_meta":{},"meta":{},"requires":[],"members":{"css_mixin":[],"cfg":[],"method":[{"meta":{},"owner":"global","name":"","id":"method-","tagname":"method"},{"meta":{},"owner":"global","name":"alias","id":"method-alias","tagname":"method"},{"meta":{},"owner":"global","name":"alias_method","id":"method-alias_method","tagname":"method"}],"property":[{"meta":{},"owner":"global","name":"","id":"property-","tagname":"property"},{"meta":{"author":["Txema"]},"owner":"global","name":"constructor","id":"property-constructor","tagname":"property"}],"event":[],"css_var":[]},"superclasses":[],"component":false,"mixedInto":[],"name":"global","mixins":[],"parentMixins":[],"tagname":"class","html":"<div><div class='doc-contents'><p>Global variables and functions.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/ll_Function.html#global-property-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-property-' class='name not-expandable'></a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'><p>Takes a function and prepare it to clone with the Function constructor.</p>\n</div><div class='long'><p>Takes a function and prepare it to clone with the Function constructor.</p>\n</div></div></div><div id='property-constructor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/ll_Processor.html#global-property-constructor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-property-constructor' class='name not-expandable'>constructor</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'><p>Multiprocess components / state machines\n@version 1.00, june 2007</p>\n</div><div class='long'><p>Multiprocess components / state machines\n@version 1.00, june 2007</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/ll_Object.html#global-method-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-' class='name expandable'></a>( <span class='pre'>method, obj, params</span> )</div><div class='description'><div class='short'>@method_missing\n\nAutomatically called whenever a non existing method is called\nin an object. ...</div><div class='long'><p>@method_missing</p>\n\n<p>Automatically called whenever a non existing method is called\nin an object. Provides boilerplate getter and setters.</p>\n\n<h3>Example</h3>\n\n<pre><code> function N(){\n    this.a = 2;\n }\n\n n = new N()\n n.set_a(3)\n n.get_a()\n //=&gt; 3\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>method</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">string</a><div class='sub-desc'><p>Method name</p>\n</div></li><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>Scope of the method call</p>\n</div></li><li><span class='pre'>params</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>List of params of the method call</p>\n</div></li></ul></div></div></div><div id='method-alias' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/ll_Object.html#global-method-alias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-alias' class='name expandable'>alias</a>( <span class='pre'>alias_name, original_method</span> )</div><div class='description'><div class='short'>Creates a reference to an original method. ...</div><div class='long'><p>Creates a reference to an original method. Changing\nthe original one behavior, the alias is also changing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias_name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">string</a><div class='sub-desc'><p>Name of the new method.</p>\n</div></li><li><span class='pre'>original_method</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">string</a><div class='sub-desc'><p>Name of the original method.</p>\n</div></li></ul></div></div></div><div id='method-alias_method' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/ll_Module.html#global-method-alias_method' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-alias_method' class='name expandable'>alias_method</a>( <span class='pre'>new_name, old_name</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></div><div class='description'><div class='short'>Creates a copy of the old name function with the new name. ...</div><div class='long'><p>Creates a copy of the old name function with the new name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>new_name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">string</a> | <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'>\n</div></li><li><span class='pre'>old_name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">string</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></span><div class='sub-desc'><p>returns a reference to the newly created function.</p>\n</div></li></ul></div></div></div></div></div></div></div>","alternateClassNames":[],"aliases":{},"files":[{"href":"","filename":""}]});